/* ever nesiting level (child or parent) have a reason to exist, and if you wounder if there is any nesting in the html structure that might seem to be useless, it is to maintain `transform`, prevent its overriding and avoind repeating its functions!  */

/*  */
/* animation */
/*  */
@keyframes orbit {
    /* rotate around */
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
@keyframes facing {
    /*object stay facing while orbitting */
    0% {
        transform: rotateY(0deg);
    }
    100% {
        transform: rotateY(360deg);
    }
}

/*  */
/*  */

:root {
    --net-slope: 70deg;
    --stand-slope: -90deg;
    --net-scale: 80%;
    /* Realistic scaling of planetary sizes and orbits in em */

    /* `--object-w` = object Width */
    --sun-w: 20em;
    --mercury-w: 1.2em;
    --venus-w: 2.4em;
    --earth-w: 3em;
    --moon-w: 0.6em;
    --mars-w: 1.8em;
    --jupiter-w: 6.4em;
    --saturn-w: 5.8em;
    --uranus-w: 4.2em;
    --neptune-w: 4em;

    /* `--object-ow` = object Orbit Width */
    --mercury-ow: 13em;
    --venus-ow: calc(var(--mercury-ow) + 5em);
    --earth-ow: calc(var(--venus-ow) + 7em);
    --moon-ow: 4em;
    --mars-ow: calc(var(--earth-ow) + 10em);
    --jupiter-ow: calc(var(--mars-ow) + 16em);
    --saturn-ow: calc(var(--jupiter-ow) + 15em);
    --uranus-ow: calc(var(--saturn-ow) + 15em);
    --neptune-ow: calc(var(--uranus-ow) + 15em);

    /* `--object-od` = object Orbit Duration */
    --mercury-od: 8800ms;
    --venus-od: 22500ms;
    --earth-od: 36500ms;
    --moon-od: 2950ms;
    --mars-od: 68700ms;
    --jupiter-od: 433300ms;
    --saturn-od: 1076000ms;
    --uranus-od: 3069000ms;
    --neptune-od: 6019000ms;
}
body,
html {
    height: 100%;
    overflow: hidden !important;
}
body {
    background-image: url(../imgs/bg.png);
    color: white;
}
html,
body,
body > * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    text-decoration: none;
    border: none;
    outline: none;
}
main {
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}
.net,
.object-box,
.sub-object,
.orbitor,
.orbited,
.stand {
    /* preserving 3D mode over layers */
    transform-style: preserve-3d;
}
/* the .object-box element has both the classes `orbit` & `[planetname]` */
.net {
    /* the virtual net that caries the objects */
    position: relative;
    transform: rotateX(var(--net-slope));
    font-size: var(--net-scale); /* the scaling of the whole thing */
}
.object-box {
    /* centerlizing every object */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.sub-object {
    /* to apply only the orbitting of hte sub-object (moon) //reverting the orbiting of the parent */
    animation: orbit var(--od) linear infinite reverse;
}
.orbit {
    /* drawing orbits */
    border-radius: 50%;
    border: solid #4e5961 calc(1em / 16);
}
.orbitor {
    /* rotating what is inside `.orbit`*/
    width: 100%;
    height: 100%;
    animation: orbit var(--od) linear infinite;
    display: flex;
    align-items: center;
}
.orbited {
    /* making the orbit line in the middle of the object */
    transform: translateX(-50%);
}
.stand {
    /* standing the object up  */
    transform: rotateX(var(--stand-slope));
    height: min-content;
}
.object {
    border-radius: 50%;
    .orbited & {
        /* keep the object facing while orbitting */
        animation: facing var(--od) linear infinite;
        /* animation-name: facing;
        animation-timing-function: linear;
        animation-iteration-count: infinite; */
    }
}
/*  */
/* objects */
/*  */
#sun {
    width: 10em;
    height: 10em;
    background-color: yellow;
}

/* Mercury */
.mercury.orbit {
    --od: var(--mercury-od);
    width: var(--mercury-ow);
    height: var(--mercury-ow);
}
#mercury {
    width: var(--mercury-w);
    height: var(--mercury-w);
    background-color: gray;
}

/* Venus */
.venus.orbit {
    --od: var(--venus-od);
    width: var(--venus-ow);
    height: var(--venus-ow);
}
#venus {
    width: var(--venus-w);
    height: var(--venus-w);
    background-color: gold;
}

/* Earth */
.earth.orbit {
    --od: var(--earth-od);
    width: var(--earth-ow);
    height: var(--earth-ow);
}
#earth {
    width: var(--earth-w);
    height: var(--earth-w);
    background-color: blue;
}
/* moon */
/* earth */
.moon.orbit {
    --od: var(--moon-od);
    width: var(--moon-ow);
    height: var(--moon-ow);
}
#moon {
    width: var(--moon-w);
    height: var(--moon-w);
    background-color: grey;
}

/* Mars */
.mars.orbit {
    --od: var(--mars-od);
    width: var(--mars-ow);
    height: var(--mars-ow);
}
#mars {
    width: var(--mars-w);
    height: var(--mars-w);
    background-color: red;
}

/* Jupiter */
.jupiter.orbit {
    --od: var(--jupiter-od);
    width: var(--jupiter-ow);
    height: var(--jupiter-ow);
}
#jupiter {
    width: var(--jupiter-w);
    height: var(--jupiter-w);
    background-color: orange;
}

/* Saturn */
.saturn.orbit {
    --od: var(--saturn-od);
    width: var(--saturn-ow);
    height: var(--saturn-ow);
}
#saturn {
    width: var(--saturn-w);
    height: var(--saturn-w);
    background-color: tan;
}

/* Uranus */
.uranus.orbit {
    --od: var(--uranus-od);
    width: var(--uranus-ow);
    height: var(--uranus-ow);
}
#uranus {
    width: var(--uranus-w);
    height: var(--uranus-w);
    background-color: lightblue;
}

/* Neptune */
.neptune.orbit {
    --od: var(--neptune-od);
    width: var(--neptune-ow);
    height: var(--neptune-ow);
}
#neptune {
    width: var(--neptune-w);
    height: var(--neptune-w);
    background-color: darkblue;
}

/*  */
/* header */
/*  */
header {
    width: 100%;
    height: 50px;
    display: flex;
    align-items: center;
    padding-inline: 1em;
    text-transform: capitalize;
    font-family: Impact, Haettenschweiler, "Arial Narrow Bold", sans-serif;
}
header > .day-counter {
    letter-spacing: 1px;
    & > span {
        display: inline-block;
        transform: translateY(0.085em);
    }
}
